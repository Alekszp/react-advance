{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\AdvancedReact02Apr\\\\sick-fits\\\\frontend\\\\components\\\\Pagination.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PaginationStyle from './styles/PaginationStyles';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport { perPage } from \"../config\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nconst PAGINATION_QUERY = gql`\n    query PAGINATION_QUERY{\n        itemsConnection{\n            aggregate {\n                count\n            }\n        }\n    }\n`;\n\nconst Pagination = props => __jsx(Query, {\n  query: PAGINATION_QUERY,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }\n}, ({\n  data,\n  loading,\n  error\n}) => {\n  if (error) return __jsx(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 38\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 40\n    }\n  }, \"Loading...\");\n  const count = data.itemsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  return __jsx(PaginationStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }, \"Sick Fits! - Page \", props.page, \" of \", pages)), __jsx(Link, {\n    prefetch: true,\n    href: {\n      pathname: 'shop',\n      query: {\n        page: props.page - 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, \"\\u2B05 Prev\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, \"Page \", props.page, \" of \", pages, \" \"));\n});\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/Alex/Documents/AdvancedReact02Apr/sick-fits/frontend/components/Pagination.js"],"names":["React","PaginationStyle","gql","Query","Error","perPage","Head","Link","PAGINATION_QUERY","Pagination","props","data","loading","error","count","itemsConnection","aggregate","pages","Math","ceil","page","pathname","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,gBAAgB,GAAGN,GAAI;;;;;;;;CAA7B;;AAUA,MAAMO,UAAU,GAAGC,KAAK,IAGZ,MAAC,KAAD;AAAO,EAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAAC;AAACG,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA2B;AACxB,MAAGA,KAAH,EAAU,OAAO,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACV,MAAGD,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,QAAME,KAAK,GAAGH,IAAI,CAACI,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGT,OAAlB,CAAd;AACA,SAAQ,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0BK,KAAK,CAACU,IAAhC,UAA0CH,KAA1C,CADJ,CADA,EAIA,MAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,IAAI,EAAE;AAACI,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,KAAK,EAAE;AAAEF,QAAAA,IAAI,EAAEV,KAAK,CAACU,IAAN,GAAa;AAArB;AAA1B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAJA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASV,KAAK,CAACU,IAAf,UAAyBH,KAAzB,MAPA,CAAR;AASH,CAfL,CAHZ;;AAyBA,eAAeR,UAAf","sourcesContent":["import React from 'react'\r\nimport PaginationStyle from './styles/PaginationStyles'\r\nimport gql from 'graphql-tag'\r\nimport {Query} from 'react-apollo'\r\nimport Error from './ErrorMessage'\r\nimport { perPage } from \"../config\";\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\n\r\nconst PAGINATION_QUERY = gql`\r\n    query PAGINATION_QUERY{\r\n        itemsConnection{\r\n            aggregate {\r\n                count\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Pagination = props => (\r\n    \r\n        \r\n            <Query query={PAGINATION_QUERY}>\r\n                {({data, loading, error})=> {\r\n                    if(error) return <Error error={error}/>\r\n                    if(loading) return <p>Loading...</p>\r\n                    const count = data.itemsConnection.aggregate.count\r\n                    const pages = Math.ceil(count / perPage)\r\n                    return (<PaginationStyle>\r\n                            <Head>\r\n                                <title>Sick Fits! - Page {props.page} of {pages}</title>\r\n                            </Head>\r\n                            <Link prefetch href={{pathname: 'shop', query: { page: props.page - 1}}}>\r\n                                <a>â¬… Prev</a>\r\n                            </Link>\r\n                            <p>Page {props.page} of {pages} </p>\r\n                         </PaginationStyle>)\r\n                }}\r\n            </Query>\r\n        \r\n    \r\n)\r\n    \r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}