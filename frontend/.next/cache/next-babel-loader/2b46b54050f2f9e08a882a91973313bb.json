{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\AdvancedReact02Apr\\\\sick-fits\\\\frontend\\\\components\\\\Pagination.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query PAGINATION_QUERY{\\n        itemsConnection{\\n            aggregate {\\n                count\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PaginationStyle from './styles/PaginationStyles';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport { perPage } from \"../config\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nvar PAGINATION_QUERY = gql(_templateObject());\n\nvar Pagination = function Pagination(props) {\n  return __jsx(Query, {\n    query: PAGINATION_QUERY,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    if (error) return __jsx(Error, {\n      error: error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 38\n      }\n    });\n    if (loading) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 40\n      }\n    }, \"Loading...\");\n    var count = data.itemsConnection.aggregate.count;\n    var pages = Math.ceil(count / perPage);\n    return __jsx(PaginationStyle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    }, __jsx(Head, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, __jsx(\"title\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, \"Sick Fits! - Page \", props.page, \" of \", pages)), __jsx(Link, {\n      prefetch: true,\n      href: {\n        pathname: 'shop',\n        query: {\n          page: props.page - 1\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      className: \"prev\",\n      \"aria-disabled\": props.page <= 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }\n    }, \"\\u2B05 Prev\")), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, \"Page \", props.page, \" of \", pages, \" \"), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, \"Page \", count, \" Items total \"));\n  });\n};\n\nexport default Pagination;","map":{"version":3,"sources":["C:/Users/Alex/Documents/AdvancedReact02Apr/sick-fits/frontend/components/Pagination.js"],"names":["React","PaginationStyle","gql","Query","Error","perPage","Head","Link","PAGINATION_QUERY","Pagination","props","data","loading","error","count","itemsConnection","aggregate","pages","Math","ceil","page","pathname","query"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,gBAAgB,GAAGN,GAAH,mBAAtB;;AAUA,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAGZ,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,gBAA2B;AAAA,QAAzBG,IAAyB,QAAzBA,IAAyB;AAAA,QAAnBC,OAAmB,QAAnBA,OAAmB;AAAA,QAAVC,KAAU,QAAVA,KAAU;AACxB,QAAGA,KAAH,EAAU,OAAO,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACV,QAAGD,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACZ,QAAME,KAAK,GAAGH,IAAI,CAACI,eAAL,CAAqBC,SAArB,CAA+BF,KAA7C;AACA,QAAMG,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGT,OAAlB,CAAd;AACA,WAAQ,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA0BK,KAAK,CAACU,IAAhC,UAA0CH,KAA1C,CADJ,CADA,EAIA,MAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,IAAI,EAAE;AAACI,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAEV,KAAK,CAACU,IAAN,GAAa;AAArB;AAA1B,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,uBAAeV,KAAK,CAACU,IAAN,IAAc,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAJA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASV,KAAK,CAACU,IAAf,UAAyBH,KAAzB,MAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASH,KAAT,kBARA,CAAR;AAUH,GAhBL,CAHY;AAAA,CAAxB;;AA0BA,eAAeL,UAAf","sourcesContent":["import React from 'react'\r\nimport PaginationStyle from './styles/PaginationStyles'\r\nimport gql from 'graphql-tag'\r\nimport {Query} from 'react-apollo'\r\nimport Error from './ErrorMessage'\r\nimport { perPage } from \"../config\";\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\n\r\nconst PAGINATION_QUERY = gql`\r\n    query PAGINATION_QUERY{\r\n        itemsConnection{\r\n            aggregate {\r\n                count\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst Pagination = props => (\r\n    \r\n        \r\n            <Query query={PAGINATION_QUERY}>\r\n                {({data, loading, error})=> {\r\n                    if(error) return <Error error={error}/>\r\n                    if(loading) return <p>Loading...</p>\r\n                    const count = data.itemsConnection.aggregate.count\r\n                    const pages = Math.ceil(count / perPage)\r\n                    return (<PaginationStyle>\r\n                            <Head>\r\n                                <title>Sick Fits! - Page {props.page} of {pages}</title>\r\n                            </Head>\r\n                            <Link prefetch href={{pathname: 'shop', query: { page: props.page - 1}}}>\r\n                                <a className='prev' aria-disabled={props.page <= 1}>â¬… Prev</a>\r\n                            </Link>\r\n                            <p>Page {props.page} of {pages} </p>\r\n                            <p>Page {count} Items total </p>\r\n                         </PaginationStyle>)\r\n                }}\r\n            </Query>\r\n        \r\n    \r\n)\r\n    \r\n\r\nexport default Pagination"]},"metadata":{},"sourceType":"module"}