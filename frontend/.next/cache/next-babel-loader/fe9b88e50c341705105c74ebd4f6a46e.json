{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\AdvancedReact02Apr\\\\sick-fits\\\\frontend\\\\components\\\\DeleteItem.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation DELETE_ITEM_MUTATION($id: ID!){\\n        deleteItem(id: $id){\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\nvar DELETE_ITEM_MUTATION = gql(_templateObject());\n\nvar DeleteItem = /*#__PURE__*/function (_Component) {\n  _inherits(DeleteItem, _Component);\n\n  var _super = _createSuper(DeleteItem);\n\n  function DeleteItem() {\n    var _this;\n\n    _classCallCheck(this, DeleteItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (cache, payload) {\n      //read the cache for the items we want\n      var data = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      }); // filter the deleted item out of the page\n\n      data.items = data.items.filter(function (item) {\n        item.id !== payload.data.deleteItem.id;\n      }); //write updated cache\n\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DeleteItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: DELETE_ITEM_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        update: this.update,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, function (deleteItem, _ref) {\n        var error = _ref.error;\n        return __jsx(\"button\", {\n          onClick: function onClick() {\n            if (confirm('Are you sure want to delete this item?')) {\n              deleteItem();\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }\n        }, _this2.props.children);\n      });\n    }\n  }]);\n\n  return DeleteItem;\n}(Component);\n\nexport default DeleteItem;","map":{"version":3,"sources":["C:/Users/Alex/Documents/AdvancedReact02Apr/sick-fits/frontend/components/DeleteItem.js"],"names":["React","Component","Mutation","gql","ALL_ITEMS_QUERY","DELETE_ITEM_MUTATION","DeleteItem","cache","payload","data","readQuery","query","items","filter","item","id","deleteItem","writeQuery","props","update","error","confirm","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,eAAR,QAA8B,SAA9B;AAEA,IAAMC,oBAAoB,GAAGF,GAAH,mBAA1B;;IAQMG,U;;;;;;;;;;;;;;;;6DACO,UAACC,KAAD,EAAQC,OAAR,EAAkB;AACvB;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAACC,QAAAA,KAAK,EAAEP;AAAR,OAAhB,CAAb,CAFuB,CAGvB;;AACAK,MAAAA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,CAAWC,MAAX,CAAkB,UAAAC,IAAI,EAAG;AAClCA,QAAAA,IAAI,CAACC,EAAL,KAAYP,OAAO,CAACC,IAAR,CAAaO,UAAb,CAAwBD,EAApC;AACH,OAFY,CAAb,CAJuB,CAOvB;;AACAR,MAAAA,KAAK,CAACU,UAAN,CAAiB;AAACN,QAAAA,KAAK,EAAEP,eAAR;AAAyBK,QAAAA,IAAI,EAAJA;AAAzB,OAAjB;AACH,K;;;;;;;6BACQ;AAAA;;AACL,aAEI,MAAC,QAAD;AAAU,QAAA,QAAQ,EAAEJ,oBAApB;AAA0C,QAAA,SAAS,EAAE;AAACU,UAAAA,EAAE,EAAE,KAAKG,KAAL,CAAWH;AAAhB,SAArD;AAA0E,QAAA,MAAM,EAAE,KAAKI,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAACH,UAAD;AAAA,YAAeI,KAAf,QAAeA,KAAf;AAAA,eACG;AAAQ,UAAA,OAAO,EAAE,mBAAM;AACnB,gBAAIC,OAAO,CAAC,wCAAD,CAAX,EAAuD;AACnDL,cAAAA,UAAU;AACb;AACJ,WAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAII,MAAI,CAACE,KAAL,CAAWI,QAJf,CADH;AAAA,OADL,CAFJ;AAcH;;;;EA1BoBrB,S;;AA6BzB,eAAeK,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {Mutation} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport {ALL_ITEMS_QUERY} from './Items'\r\n\r\nconst DELETE_ITEM_MUTATION = gql`\r\n    mutation DELETE_ITEM_MUTATION($id: ID!){\r\n        deleteItem(id: $id){\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nclass DeleteItem extends Component {\r\n    update = (cache, payload)=>{\r\n        //read the cache for the items we want\r\n        const data = cache.readQuery({query: ALL_ITEMS_QUERY})\r\n        // filter the deleted item out of the page\r\n        data.items = data.items.filter(item =>{\r\n            item.id !== payload.data.deleteItem.id\r\n        })\r\n        //write updated cache\r\n        cache.writeQuery({query: ALL_ITEMS_QUERY, data})\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <Mutation mutation={DELETE_ITEM_MUTATION} variables={{id: this.props.id}} update={this.update}>\r\n                {(deleteItem, { error }) => (\r\n                    <button onClick={() => {\r\n                        if (confirm('Are you sure want to delete this item?')) {\r\n                            deleteItem()\r\n                        }\r\n                    }}>{this.props.children}\r\n                    </button>\r\n                )}\r\n            </Mutation>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteItem;"]},"metadata":{},"sourceType":"module"}