{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\AdvancedReact02Apr\\\\sick-fits\\\\frontend\\\\components\\\\UpdateItem.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport Router from 'next/router';\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!){\n        item(where: {id: $id}){\n            id\n            title\n            description\n            price\n        }\n    }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n    mutation UPDATE_ITEM_MUTATION(\n        $title: String!,\n        $description: String!,\n        $price: Int!,\n        $image: String,\n        $largeImage: String\n    ){\n        createItem(\n            title: $title,\n            description: $description,\n            price: $price,\n            image: $image,\n            largeImage: $largeImage){\n            id\n        }\n    }\n`;\n\nclass UpdateItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === 'number' ? parseInt(value) : value;\n      this.setState({\n        [name]: val\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Query, {\n      query: SINGLE_ITEM_QUERY,\n      variables: {\n        id: this.props.id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, ({\n      data,\n      loading\n    }) => {\n      if (loading) {\n        return __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 40\n          }\n        }, \"Loading...\");\n      }\n\n      return __jsx(Mutation, {\n        mutation: UPDATE_ITEM_MUTATION,\n        variables: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, (createItem, {\n        loading,\n        error\n      }) => __jsx(Form, {\n        onSubmit: async e => {\n          e.preventDefault();\n          const res = await createItem();\n          Router.push({\n            pathname: '/items',\n            query: {\n              id: res.data.createItem.id\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, \"Sell an item\"), __jsx(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, \"Title\", __jsx(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        placeholder: \"title\",\n        defaultValue: data.item.title,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      })), __jsx(\"label\", {\n        htmlFor: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, \"Description\", __jsx(\"textarea\", {\n        type: \"text\",\n        id: \"description\",\n        name: \"description\",\n        placeholder: \"description\",\n        value: this.state.description,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      })), __jsx(\"label\", {\n        htmlFor: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }, \"Price\", __jsx(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        placeholder: \"title\",\n        value: this.state.price,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      })), __jsx(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }\n      }, \"Submit\"), __jsx(Error, {\n        error: error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }))));\n    });\n  }\n\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };","map":{"version":3,"sources":["C:/Users/Alex/Documents/AdvancedReact02Apr/sick-fits/frontend/components/UpdateItem.js"],"names":["React","Component","Mutation","Query","gql","Form","formatMoney","Error","Router","SINGLE_ITEM_QUERY","UPDATE_ITEM_MUTATION","UpdateItem","e","name","type","value","target","val","parseInt","setState","render","id","props","data","loading","state","createItem","error","preventDefault","res","push","pathname","query","item","title","handleChange","description","price"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Mutation, Query} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport Form from './styles/Form'\r\nimport formatMoney from '../lib/formatMoney'\r\nimport Error from './ErrorMessage'\r\nimport Router from 'next/router'\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n    query SINGLE_ITEM_QUERY($id: ID!){\r\n        item(where: {id: $id}){\r\n            id\r\n            title\r\n            description\r\n            price\r\n        }\r\n    }\r\n`\r\nconst UPDATE_ITEM_MUTATION = gql`\r\n    mutation UPDATE_ITEM_MUTATION(\r\n        $title: String!,\r\n        $description: String!,\r\n        $price: Int!,\r\n        $image: String,\r\n        $largeImage: String\r\n    ){\r\n        createItem(\r\n            title: $title,\r\n            description: $description,\r\n            price: $price,\r\n            image: $image,\r\n            largeImage: $largeImage){\r\n            id\r\n        }\r\n    }\r\n`  \r\n\r\nclass UpdateItem extends Component {\r\n    state = {}\r\n    handleChange = (e)=>{\r\n        const {name, type, value} = e.target\r\n        const val = type === 'number' ? parseInt(value) : value\r\n        this.setState({[name]: val})\r\n    }\r\n\r\n   \r\n    render() {\r\n        return (\r\n            <Query query={SINGLE_ITEM_QUERY} variables={{id: this.props.id}}>\r\n                {({data, loading})=>{\r\n                    if(loading){return <p>Loading...</p>}\r\n                    return (\r\n                    <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\r\n                        {(createItem, {loading, error})=>(\r\n                        <Form onSubmit={async e=>{\r\n                            e.preventDefault()\r\n                            const res = await createItem();\r\n                            Router.push({\r\n                                pathname: '/items',\r\n                                query: {id: res.data.createItem.id}\r\n                            })\r\n                            }}>\r\n                            <h2>Sell an item</h2>\r\n                            <fieldset disabled={loading} aria-busy={loading}>\r\n                                <label htmlFor=\"title\">\r\n                                    Title\r\n                                    <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"title\" defaultValue={data.item.title} onChange={this.handleChange} required />\r\n                                </label>\r\n                                <label htmlFor=\"title\">\r\n                                    Description\r\n                                    <textarea type=\"text\" id=\"description\" name=\"description\" placeholder=\"description\" value={this.state.description} onChange={this.handleChange} required />\r\n                                </label>\r\n                                <label htmlFor=\"title\">\r\n                                    Price\r\n                                    <input type=\"number\" id=\"price\" name=\"price\" placeholder=\"title\" value={this.state.price} onChange={this.handleChange} required />\r\n                                </label>\r\n                                <button type=\"submit\">Submit</button>\r\n                                <Error error={error} />\r\n                            </fieldset>\r\n                        </Form>\r\n                        )}\r\n                    </Mutation>\r\n                )}}\r\n            </Query>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateItem;\r\nexport { UPDATE_ITEM_MUTATION }"]},"metadata":{},"sourceType":"module"}