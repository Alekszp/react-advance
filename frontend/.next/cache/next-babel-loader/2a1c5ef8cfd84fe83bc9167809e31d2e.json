{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\AdvancedReact02Apr\\\\sick-fits\\\\frontend\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App, { Container } from 'next/app';\nimport Page from '../components/Page';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          apollo = _this$props.apollo,\n          pageProps = _this$props.pageProps;\n      return __jsx(ApolloProvider, {\n        client: apollo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              pageProps.query = ctx.query;\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withData(MyApp);","map":{"version":3,"sources":["C:/Users/Alex/Documents/AdvancedReact02Apr/sick-fits/frontend/pages/_app.js"],"names":["App","Container","Page","ApolloProvider","withData","MyApp","props","Component","apollo","pageProps","ctx","getInitialProps","query"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAAQC,cAAR,QAA6B,cAA7B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;IAEMC,K;;;;;;;;;;;;;6BAWO;AAAA,wBAEkC,KAAKC,KAFvC;AAAA,UAEEC,SAFF,eAEEA,SAFF;AAAA,UAEaC,MAFb,eAEaA,MAFb;AAAA,UAEqBC,SAFrB,eAEqBA,SAFrB;AAIL,aAEI,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CAFJ;AASH;;;;;;;;;AAvByBF,cAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACjCD,cAAAA,S,GAAY,E;;mBACbF,SAAS,CAACI,e;;;;;;+CACSJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBD,cAAAA,S;;;AAGJA,cAAAA,SAAS,CAACG,KAAV,GAAkBF,GAAG,CAACE,KAAtB;+CACO;AAACH,gBAAAA,SAAS,EAATA;AAAD,e;;;;;;;;;;;;EARST,G;;AA2BpB,eAAeI,QAAQ,CAACC,KAAD,CAAvB","sourcesContent":["import App, {Container} from 'next/app'\r\nimport Page from '../components/Page'\r\nimport {ApolloProvider} from 'react-apollo'\r\nimport withData from '../lib/withData'\r\n\r\nclass MyApp extends App {\r\nstatic async getInitialProps({Component, ctx}){\r\n    let pageProps = {}\r\n    if(Component.getInitialProps){\r\n        pageProps = await Component.getInitialProps(ctx)\r\n    }\r\n\r\n    pageProps.query = ctx.query\r\n    return {pageProps}\r\n}\r\n\r\n    render() {\r\n\r\n        const {Component, apollo, pageProps} = this.props;\r\n\r\n        return ( \r\n\r\n            <ApolloProvider client={apollo}>\r\n                <Page>\r\n                    <Component {...pageProps}/>\r\n                </Page>\r\n            </ApolloProvider>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default withData(MyApp)"]},"metadata":{},"sourceType":"module"}